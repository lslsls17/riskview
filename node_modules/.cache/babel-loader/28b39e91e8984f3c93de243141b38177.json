{"ast":null,"code":"import{info}from\"../data/info\";import{allocation}from\"../data/allocation\";import{performance}from\"../data/performance\";import{positions}from\"../data/positions\";function getRandomDelay(){// return 0;\nreturn 500+Math.random()*2000;// return 9999999999;\n}export function getFundInfo(){return new Promise(function(resolve){setTimeout(function(){resolve(info);},getRandomDelay());});}export function getFundAllocation(){return new Promise(function(resolve){setTimeout(function(){resolve(allocation);},getRandomDelay());});}export function getPerformance(){return new Promise(function(resolve){setTimeout(function(){resolve(performance);},getRandomDelay());});}export function getPositions(){return new Promise(function(resolve){setTimeout(function(){resolve(positions);},getRandomDelay());});}","map":{"version":3,"sources":["C:/Users/lswht/OneDrive/material/GitHub/riskview/src/services/dataService.ts"],"names":["info","allocation","performance","positions","getRandomDelay","Math","random","getFundInfo","Promise","resolve","setTimeout","getFundAllocation","getPerformance","getPositions"],"mappings":"AAAA,OAASA,IAAT,KAAqB,cAArB,CACA,OAASC,UAAT,KAA2B,oBAA3B,CACA,OAASC,WAAT,KAA4B,qBAA5B,CACA,OAASC,SAAT,KAA0B,mBAA1B,CAGA,QAASC,CAAAA,cAAT,EAA0B,CACxB;AACA,MAAO,KAAOC,IAAI,CAACC,MAAL,GAAgB,IAA9B,CACA;AACD,CAED,MAAO,SAASC,CAAAA,WAAT,EAAqC,CAC1C,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CAC9BC,UAAU,CAAC,UAAM,CACfD,OAAO,CAACT,IAAD,CAAP,CACD,CAFS,CAEPI,cAAc,EAFP,CAAV,CAGD,CAJM,CAAP,CAKD,CAED,MAAO,SAASO,CAAAA,iBAAT,EAAoD,CACzD,MAAO,IAAIH,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CAC9BC,UAAU,CAAC,UAAM,CACfD,OAAO,CAACR,UAAD,CAAP,CACD,CAFS,CAEPG,cAAc,EAFP,CAAV,CAGD,CAJM,CAAP,CAKD,CAED,MAAO,SAASQ,CAAAA,cAAT,EAA6C,CAClD,MAAO,IAAIJ,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CAC9BC,UAAU,CAAC,UAAM,CACfD,OAAO,CAACP,WAAD,CAAP,CACD,CAFS,CAEPE,cAAc,EAFP,CAAV,CAGD,CAJM,CAAP,CAKD,CAED,MAAO,SAASS,CAAAA,YAAT,EAA6C,CAClD,MAAO,IAAIL,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAa,CAC9BC,UAAU,CAAC,UAAM,CACfD,OAAO,CAACN,SAAD,CAAP,CACD,CAFS,CAEPC,cAAc,EAFP,CAAV,CAGD,CAJM,CAAP,CAKD","sourcesContent":["import { info } from \"../data/info\";\r\nimport { allocation } from \"../data/allocation\";\r\nimport { performance } from \"../data/performance\";\r\nimport { positions } from \"../data/positions\";\r\nimport { Allocation, Position } from \"../data/models\";\r\n\r\nfunction getRandomDelay() {\r\n  // return 0;\r\n  return 500 + (Math.random() * 2000);\r\n  // return 9999999999;\r\n}\r\n\r\nexport function getFundInfo(): Promise<any> {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(info);\r\n    }, getRandomDelay());\r\n  })\r\n}\r\n\r\nexport function getFundAllocation(): Promise<Allocation[]> {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(allocation);\r\n    }, getRandomDelay());\r\n  });\r\n}\r\n\r\nexport function getPerformance(): Promise<string[]> {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(performance);\r\n    }, getRandomDelay());\r\n  })\r\n}\r\n\r\nexport function getPositions(): Promise<Position[]> {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(positions);\r\n    }, getRandomDelay());\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}