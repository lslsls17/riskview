{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lswht\\\\OneDrive\\\\material\\\\GitHub\\\\riskview\\\\src\\\\panels\\\\AllocationPanel.tsx\";\nimport React from \"react\";\nimport { Chart, ChartLegend, ChartSeries, ChartSeriesItem, ChartSeriesLabels, ChartTitle, ChartTooltip } from \"@progress/kendo-react-charts\";\nimport { getFundAllocation } from \"../services/dataService\";\nimport Loading from \"../layout/Loading\";\n\nconst labelContent = e => `${e.value}%`;\n\nconst renderTooltip = e => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }, e.point ? e.point.category : \"\");\n};\n\nexport default function AllocationPanel() {\n  const [data, setData] = React.useState();\n  React.useEffect(() => {\n    getFundAllocation().then(data => {\n      setData(data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !data && /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Chart, {\n    style: {\n      opacity: data ? \"1\" : \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChartTitle, {\n    text: \"Asset Allocation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ChartSeries, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChartSeriesItem, {\n    type: \"donut\",\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChartSeriesLabels, {\n    content: labelContent,\n    background: \"none\",\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ChartLegend, {\n    position: \"bottom\",\n    visible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ChartTooltip, {\n    render: renderTooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/lswht/OneDrive/material/GitHub/riskview/src/panels/AllocationPanel.tsx"],"names":["React","Chart","ChartLegend","ChartSeries","ChartSeriesItem","ChartSeriesLabels","ChartTitle","ChartTooltip","getFundAllocation","Loading","labelContent","e","value","renderTooltip","point","category","AllocationPanel","data","setData","useState","useEffect","then","opacity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,eAJF,EAKEC,iBALF,EAMEC,UANF,EAOEC,YAPF,QAQO,8BARP;AAUA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAGA,MAAMC,YAAY,GAAIC,CAAD,IAAc,GAAEA,CAAC,CAACC,KAAM,GAA7C;;AAEA,MAAMC,aAAa,GAAIF,CAAD,IAAY;AAChC,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,CAAC,CAACG,KAAF,GAAUH,CAAC,CAACG,KAAF,CAAQC,QAAlB,GAA6B,EAAnC,CAAP;AACD,CAFD;;AAIA,eAAe,SAASC,eAAT,GAA2B;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,KAAK,CAACmB,QAAN,EAAxB;AACAnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpBZ,IAAAA,iBAAiB,GAAGa,IAApB,CAA0BJ,IAAD,IAAwB;AAC/CC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAFD;AAGD,GAJD,EAIG,EAJH;AAMA,sBACE,0CACG,CAACA,IAAD,iBAAS,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,eAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEK,MAAAA,OAAO,EAAEL,IAAI,GAAG,GAAH,GAAS;AAAxB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,OAAtB;AAA8B,IAAA,IAAI,EAAEA,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEP,YAA5B;AAA0C,IAAA,UAAU,EAAC,MAArD;AAA4D,IAAA,KAAK,EAAC,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,eAOE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAE,QAAvB;AAAiC,IAAA,OAAO,EAAE,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEG,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFF,CADF;AAeD","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Chart,\r\n  ChartLegend,\r\n  ChartSeries,\r\n  ChartSeriesItem,\r\n  ChartSeriesLabels,\r\n  ChartTitle,\r\n  ChartTooltip\r\n} from \"@progress/kendo-react-charts\";\r\n\r\nimport { getFundAllocation } from \"../services/dataService\";\r\nimport Loading from \"../layout/Loading\";\r\nimport { Allocation } from \"../data/models\";\r\n\r\nconst labelContent = (e: any) => (`${e.value}%`);\r\n\r\nconst renderTooltip = (e: any) => {\r\n  return <div>{e.point ? e.point.category : \"\"}</div>;\r\n};\r\n\r\nexport default function AllocationPanel() {\r\n  const [data, setData] = React.useState<Allocation[]>();\r\n  React.useEffect(() => {\r\n    getFundAllocation().then((data: Allocation[]) => {\r\n      setData(data);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!data && <Loading />}\r\n      <Chart style={{ opacity: data ? \"1\" : \"0\" }}>\r\n        <ChartTitle text={\"Asset Allocation\"}></ChartTitle>\r\n        <ChartSeries>\r\n          <ChartSeriesItem type=\"donut\" data={data}>\r\n            <ChartSeriesLabels content={labelContent} background=\"none\" color=\"#fff\" />\r\n          </ChartSeriesItem>\r\n        </ChartSeries>\r\n        <ChartLegend position={\"bottom\"} visible={true} />\r\n        <ChartTooltip render={renderTooltip} />\r\n      </Chart>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}