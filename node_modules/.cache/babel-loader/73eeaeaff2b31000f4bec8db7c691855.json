{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lswht\\\\OneDrive\\\\material\\\\GitHub\\\\riskview\\\\src\\\\panels\\\\PerformancePanel.tsx\";\nimport React from \"react\";\nimport { Chart, ChartSeries, ChartSeriesItem, ChartCategoryAxis, ChartCategoryAxisItem, ChartTitle } from \"@progress/kendo-react-charts\";\nimport { getPerformance } from \"../services/dataService\";\nimport Loading from \"../layout/Loading\";\nexport default function PerformancePanel() {\n  const [data, setData] = React.useState();\n  React.useEffect(() => {\n    getPerformance().then(results => {\n      setData(results);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !data && /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Chart, {\n    style: {\n      opacity: data ? \"1\" : \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChartTitle, {\n    text: \"Fund Performance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ChartCategoryAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChartCategoryAxisItem, {\n    categories: [\"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ChartSeries, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChartSeriesItem, {\n    type: \"line\",\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/lswht/OneDrive/material/GitHub/riskview/src/panels/PerformancePanel.tsx"],"names":["React","Chart","ChartSeries","ChartSeriesItem","ChartCategoryAxis","ChartCategoryAxisItem","ChartTitle","getPerformance","Loading","PerformancePanel","data","setData","useState","useEffect","then","results","opacity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,eAHF,EAIEC,iBAJF,EAKEC,qBALF,EAMEC,UANF,QAOO,8BAPP;AASA,SAASC,cAAT,QAA+B,yBAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,eAAe,SAASC,gBAAT,GAA4B;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,KAAK,CAACY,QAAN,EAAxB;AACAZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBN,IAAAA,cAAc,GAAGO,IAAjB,CAAuBC,OAAD,IAAuB;AAC3CJ,MAAAA,OAAO,CAACI,OAAD,CAAP;AACD,KAFD;AAGD,GAJD,EAIG,EAJH;AAMA,sBACE,0CACG,CAACL,IAAD,iBAAS,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,eAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAO,EAAEN,IAAI,GAAG,GAAH,GAAS;AAAxB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,qBAAD;AAAuB,IAAA,UAAU,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAA6B,IAAA,IAAI,EAAEA,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CAFF,CADF;AAcD","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Chart,\r\n  ChartSeries,\r\n  ChartSeriesItem,\r\n  ChartCategoryAxis,\r\n  ChartCategoryAxisItem,\r\n  ChartTitle,\r\n} from \"@progress/kendo-react-charts\";\r\n\r\nimport { getPerformance } from \"../services/dataService\";\r\nimport Loading from \"../layout/Loading\";\r\n\r\nexport default function PerformancePanel() {\r\n  const [data, setData] = React.useState<string[]>();\r\n  React.useEffect(() => {\r\n    getPerformance().then((results: string[]) => {\r\n      setData(results);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!data && <Loading />}\r\n      <Chart style={{ opacity: data ? \"1\" : \"0\" }}>\r\n        <ChartTitle text=\"Fund Performance\" />\r\n        <ChartCategoryAxis>\r\n          <ChartCategoryAxisItem categories={[\"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"]} />\r\n        </ChartCategoryAxis>\r\n        <ChartSeries>\r\n          <ChartSeriesItem type=\"line\" data={data} />\r\n        </ChartSeries>\r\n      </Chart>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}