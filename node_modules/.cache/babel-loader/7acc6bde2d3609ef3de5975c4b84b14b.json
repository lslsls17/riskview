{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\lswht\\\\OneDrive\\\\material\\\\GitHub\\\\riskview\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Chart,ChartLegend,ChartSeries,ChartSeriesItem,ChartSeriesLabels,ChartTitle,ChartTooltip}from\"@progress/kendo-react-charts\";import{getFundAllocation}from\"../services/dataService\";import Loading from\"../layout/Loading\";var labelContent=function labelContent(e){return\"\".concat(e.value,\"%\");};var renderTooltip=function renderTooltip(e){return/*#__PURE__*/React.createElement(\"div\",null,e.point?e.point.category:\"\");};export default function AllocationPanel(){var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),data=_React$useState2[0],setData=_React$useState2[1];React.useEffect(function(){getFundAllocation().then(function(data){setData(data);});},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,!data&&/*#__PURE__*/React.createElement(Loading,null),/*#__PURE__*/React.createElement(Chart,{style:{opacity:data?\"1\":\"0\"}},/*#__PURE__*/React.createElement(ChartTitle,{text:\"Asset Allocation\"}),/*#__PURE__*/React.createElement(ChartSeries,null,/*#__PURE__*/React.createElement(ChartSeriesItem,{type:\"donut\",data:data},/*#__PURE__*/React.createElement(ChartSeriesLabels,{content:labelContent,background:\"none\",color:\"#fff\"}))),/*#__PURE__*/React.createElement(ChartLegend,{position:\"bottom\",visible:true}),/*#__PURE__*/React.createElement(ChartTooltip,{render:renderTooltip})));}","map":{"version":3,"sources":["C:/Users/lswht/OneDrive/material/GitHub/riskview/src/panels/AllocationPanel.tsx"],"names":["React","Chart","ChartLegend","ChartSeries","ChartSeriesItem","ChartSeriesLabels","ChartTitle","ChartTooltip","getFundAllocation","Loading","labelContent","e","value","renderTooltip","point","category","AllocationPanel","useState","data","setData","useEffect","then","opacity"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,KADF,CAEEC,WAFF,CAGEC,WAHF,CAIEC,eAJF,CAKEC,iBALF,CAMEC,UANF,CAOEC,YAPF,KAQO,8BARP,CAUA,OAASC,iBAAT,KAAkC,yBAAlC,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,kBAAgBA,CAAC,CAACC,KAAlB,OAArB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACF,CAAD,CAAY,CAChC,mBAAO,+BAAMA,CAAC,CAACG,KAAF,CAAUH,CAAC,CAACG,KAAF,CAAQC,QAAlB,CAA6B,EAAnC,CAAP,CACD,CAFD,CAIA,cAAe,SAASC,CAAAA,eAAT,EAA2B,qBAChBhB,KAAK,CAACiB,QAAN,EADgB,oDACjCC,IADiC,qBAC3BC,OAD2B,qBAExCnB,KAAK,CAACoB,SAAN,CAAgB,UAAM,CACpBZ,iBAAiB,GAAGa,IAApB,CAAyB,SAACH,IAAD,CAAwB,CAC/CC,OAAO,CAACD,IAAD,CAAP,CACD,CAFD,EAGD,CAJD,CAIG,EAJH,EAMA,mBACE,wCACG,CAACA,IAAD,eAAS,oBAAC,OAAD,MADZ,cAEE,oBAAC,KAAD,EAAO,KAAK,CAAE,CAAEI,OAAO,CAAEJ,IAAI,CAAG,GAAH,CAAS,GAAxB,CAAd,eACE,oBAAC,UAAD,EAAY,IAAI,CAAE,kBAAlB,EADF,cAEE,oBAAC,WAAD,mBACE,oBAAC,eAAD,EAAiB,IAAI,CAAC,OAAtB,CAA8B,IAAI,CAAEA,IAApC,eACE,oBAAC,iBAAD,EAAmB,OAAO,CAAER,YAA5B,CAA0C,UAAU,CAAC,MAArD,CAA4D,KAAK,CAAC,MAAlE,EADF,CADF,CAFF,cAOE,oBAAC,WAAD,EAAa,QAAQ,CAAE,QAAvB,CAAiC,OAAO,CAAE,IAA1C,EAPF,cAQE,oBAAC,YAAD,EAAc,MAAM,CAAEG,aAAtB,EARF,CAFF,CADF,CAeD","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Chart,\r\n  ChartLegend,\r\n  ChartSeries,\r\n  ChartSeriesItem,\r\n  ChartSeriesLabels,\r\n  ChartTitle,\r\n  ChartTooltip\r\n} from \"@progress/kendo-react-charts\";\r\n\r\nimport { getFundAllocation } from \"../services/dataService\";\r\nimport Loading from \"../layout/Loading\";\r\nimport { Allocation } from \"../data/models\";\r\n\r\nconst labelContent = (e: any) => (`${e.value}%`);\r\n\r\nconst renderTooltip = (e: any) => {\r\n  return <div>{e.point ? e.point.category : \"\"}</div>;\r\n};\r\n\r\nexport default function AllocationPanel() {\r\n  const [data, setData] = React.useState<Allocation[]>();\r\n  React.useEffect(() => {\r\n    getFundAllocation().then((data: Allocation[]) => {\r\n      setData(data);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!data && <Loading />}\r\n      <Chart style={{ opacity: data ? \"1\" : \"0\" }}>\r\n        <ChartTitle text={\"Asset Allocation\"}></ChartTitle>\r\n        <ChartSeries>\r\n          <ChartSeriesItem type=\"donut\" data={data}>\r\n            <ChartSeriesLabels content={labelContent} background=\"none\" color=\"#fff\" />\r\n          </ChartSeriesItem>\r\n        </ChartSeries>\r\n        <ChartLegend position={\"bottom\"} visible={true} />\r\n        <ChartTooltip render={renderTooltip} />\r\n      </Chart>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}